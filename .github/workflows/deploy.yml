name: Deploy to EC2 with GitHub Actions

on:
  push:
    branches:
      - develop  # develop 브랜치에 코드가 푸시되면 실행됩니다.

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 이 워크플로우는 우분투 가상 환경에서 실행됩니다.
    
    steps:
      # 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # 2. JDK 21 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      # 3. Gradle 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 4. Spring Boot 애플리케이션 빌드
      # GitHub Secret에 등록된 JWT_SECRET_KEY를 사용하여 빌드합니다.
      - name: Build with Gradle
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: ./gradlew build -x test

      # 5. 빌드된 .jar 파일을 EC2로 전송
      - name: Deploy to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PEM_KEY }}
          source: "build/libs/*.jar" # build/libs/ 폴더 안의 .jar 파일을
          target: "/home/ubuntu/Team15_BE"   # EC2 서버의 이 경로로 전송

      # 6. EC2에 접속하여 애플리케이션 실행
      - name: Execute SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PEM_KEY }}
          script: |
            # 기존에 실행 중인 Java 프로세스 종료
            pgrep -f '.jar' | xargs -r kill -9
            
            # 새로 전송된 .jar 파일을 백그라운드에서 실행
            nohup java -jar /home/ubuntu/Team15_BE/*.jar > /dev/null 2>&1 &