name: CI/CD with Docker Hub

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
  workflow_dispatch:

jobs:
  # 1. PR 빌드 검증
  build-validation:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      - run: chmod +x ./gradlew
      - run: ./gradlew clean build -x test

  # 2. Docker 이미지 빌드 & 푸시
  docker-build:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/hyuswim-app
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

  # 3. EC2에서 Docker Hub pull & 재시작
  deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PEM_KEY }}
          envs: SPRING_PROFILE,DB_HOST,DB_PORT,DB_NAME,DB_USER,DB_PASSWORD,DB_ROOT_PASSWORD,REDIS_HOST,REDIS_PORT,JWT_SECRET,OPENAI_API_KEY,KAKAO_CLIENT_ID,KAKAO_REDIRECT_URI,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,GOOGLE_REDIRECT_URI,MAIL_USERNAME,MAIL_PASSWORD,FRONTEND_URLS,APP_PORT,DOCKER_HUB_USERNAME
          script: |
            cd ~/Team15_BE

            echo "===== Generate .env ====="
            cat > .env <<EOF
            SPRING_PROFILE=${SPRING_PROFILE}
            DB_HOST=${DB_HOST}
            DB_PORT=${DB_PORT}
            DB_NAME=${DB_NAME}
            DB_USER=${DB_USER}
            DB_PASSWORD=${DB_PASSWORD}
            DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
            REDIS_HOST=${REDIS_HOST}
            REDIS_PORT=${REDIS_PORT}
            JWT_SECRET=${JWT_SECRET}
            OPENAI_API_KEY=${OPENAI_API_KEY}
            KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
            KAKAO_REDIRECT_URI=${KAKAO_REDIRECT_URI}
            GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
            GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
            MAIL_USERNAME=${MAIL_USERNAME}
            MAIL_PASSWORD=${MAIL_PASSWORD}
            FRONTEND_URLS=${FRONTEND_URLS}
            APP_PORT=${APP_PORT}
            EOF

            echo "===== Docker Compose Restart ====="
            docker compose down
            docker compose pull
            docker compose --env-file .env up -d

            echo "===== Container Status ====="
            docker compose ps
            docker logs --tail=200 hyuswim-app
